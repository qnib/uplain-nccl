ARG DOCKER_REGISTRY=docker.io
ARG FROM_IMG_REPO=qnib
ARG FROM_IMG_NAME="uplain-cudnn-dev"
ARG FROM_IMG_TAG="9.0"
ARG FROM_IMG_HASH=""
ARG CUDA_COMPUTE_CAPABILITIES=""
ARG CFLAG_MARCH=x86-64

### Create nccl deb
FROM ${DOCKER_REGISTRY}/${FROM_IMG_REPO}/${FROM_IMG_NAME}:${FROM_IMG_TAG}${DOCKER_IMG_HASH} AS nccl
ARG CUDA_COMPUTE_CAPABILITIES
ARG CFLAG_MARCH

RUN apt update \
 && apt install -y devscripts debhelper cmake g++-6 gcc-6 cpp-6
WORKDIR /usr/local/src
RUN git clone https://github.com/nvidia/nccl
WORKDIR /usr/local/src/nccl
RUN update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 10 \
 && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 10 \
 && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc 30 \
 && update-alternatives --set cc /usr/bin/gcc \
 && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++ 30 \
 && update-alternatives --set c++ /usr/bin/g++
COPY build_nccl.sh /usr/local/bin/
RUN build_nccl.sh

FROM ${DOCKER_REGISTRY}/${FROM_IMG_REPO}/${FROM_IMG_NAME}:${FROM_IMG_TAG}${DOCKER_IMG_HASH}

COPY --from=nccl /usr/local/src/nccl/build/pkg/deb/ /usr/local/deb/
RUN apt update \
 && apt install -y g++-6 gcc-6 cpp-6 \
 && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 10 \
 && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 10 \
 && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc 30 \
 && update-alternatives --set cc /usr/bin/gcc \
 && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++ 30 \
 && update-alternatives --set c++ /usr/bin/g++ \
 && dpkg -i /usr/local/deb/* \
 && rm -rf /usr/local/deb/
